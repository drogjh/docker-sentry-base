# NOTE: This docker-compose.yml is meant to be just an example of how
# you could accomplish this on your own. It is not intended to work in
# all use-cases and must be adapted to fit your needs. This is merely
# a guideline.

# See docs.getsentry.com/on-premise/server/ for full
# instructions

version: '2'
services:
  base:
    build: .
    restart: always
    environment:
      # Run `docker-compose run web config generate-secret-key`
      # to get the SENTRY_SECRET_KEY value.
      #SENTRY_SECRET_KEY: 'xxxxxxxx'
      # redis
      # SENTRY_REDIS_HOST: 'host'
      # SENTRY_REDIS_PASSWORD: 'pass'
      # SENTRY_REDIS_PORT: '6379'
      # SENTRY_REDIS_DB: '4'
      # memcache
      SENTRY_MEMCACHED_HOST: memcached
      # mysql
      # SENTRY_MYSQL_HOST: 'host'
      # SENTRY_DB_NAME: 'db'
      # SENTRY_DB_USER: 'user'
      # SENTRY_DB_PASSWORD: 'password'
      # SENTRY_MYSQL_PORT: '3306'
      # smtp
      SENTRY_EMAIL_HOST: smtp
    # volumes:
    #   - ./data/sentry:/var/lib/sentry

  smtp:
    restart: always
    image: tianon/exim4

  memcached:
    restart: always
    image: memcached:1.4

  web:
    extends: base
    restart: always
    command: /usr/local/bin/supervisord -c /etc/supervisords/sentry_web.conf
    links:
      - memcached
      - smtp
    ports:
      - '9006:9000'

  cron:
    extends: base
    restart: always
    command: /usr/local/bin/supervisord -c /etc/supervisords/sentry_cron.conf
    links:
      - memcached
      - smtp

  worker:
    extends: base
    restart: always
    command: /usr/local/bin/supervisord -c /etc/supervisords/sentry_worker.conf
    links:
      - memcached
      - smtp
